package tile;
import java.awt.Graphics2D;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import javax.imageio.ImageIO;

import main.GamePanel;

public class TileManager {
	GamePanel gp;
	Tile[] tile;
	int mapTileNum[][];
	
	public TileManager(GamePanel gp) {
		this.gp = gp;
	    tile = new Tile[10];
		getTileImage();
		mapTileNum = new int[gp.maxScreenCol][gp.maxScreenRow];
		loadMap();
	}

	private void getTileImage() {
		try {
			tile[0] = new Tile();
			tile[0].image = ImageIO.read(getClass().getResourceAsStream("/tiles/doc.png"));
			tile[0].collision = true;
			tile[1] = new Tile();
			tile[1].image = ImageIO.read(getClass().getResourceAsStream("/tiles/ngang.png"));
		}
		catch(IOException e) {
			e.printStackTrace();
		}
		
	}
	public void drawBackground(Graphics2D g2) {
		Image i = ImageIO.read(getClass().getResourceAsStream("background/background_Play"));
		g2.drawImage(tile[1].image,0,0,gp.tileSize,gp.tileSize, null);
	}
	public void loadMap() {
		try {
			InputStream is = getClass().getResourceAsStream("/maps/map01.txt");
			BufferedReader br = new BufferedReader(new InputStreamReader(is));
			
			int col = 0;
			int row = 0;
			while(col < gp.maxScreenCol && row < gp.maxScreenRow) {
				String line = br.readLine();
				while(col < gp.maxScreenCol) {
					String numbers[] = line.split(" ");
					int num = Integer.parseInt(numbers[col]);
					mapTileNum[col][row] = num;
					col++;
				}
				if(col == gp.maxScreenCol) {
					col = 0;
					row++;
				}
			}
		}
		catch (Exception e) {
			
		}
	}
	public void draw(Graphics2D g2) {
//		g2.drawImage(tile[1].image,0,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[0].image,48,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[1].image,96,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[0].image,144,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[0].image,192,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[1].image,240,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[0].image,288,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[1].image,336,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[0].image,384,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[0].image,432,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[1].image,480,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[0].image,528,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[1].image,576,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[0].image,624,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[1].image,672,0,gp.tileSize,gp.tileSize, null);
//		g2.drawImage(tile[0].image,720,0,gp.tileSize,gp.tileSize, null);
	    int col = 0;
	    int row = 0;
	    int x = 0;
	    int y = 0;
	    while(col < gp.maxScreenCol && row < gp.maxScreenRow) {
	    	int tileNum = mapTileNum[col][row];
	    	g2.drawImage(tile[tileNum].image, x, y, gp.tileSize, gp.tileSize, null);
	    	col++;
	    	x += gp.tileSize;
	    	if(col == gp.maxScreenCol) {
	    		col = 0;
	    		x =0;
	    		row++;
	    		y += gp.tileSize;
	    	}
	    	
	    }
	}
	
	

}
