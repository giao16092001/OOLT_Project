import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;

import javax.swing.JPanel;

public class GamePanel extends JPanel implements Runnable{
    //Screen setting
	final int originalTileSize = 16; //16x16 title(Kich thuoc tieu chuan cua 1 o trong ban do)
	final int scale = 3;
	
	final int tileSize = originalTileSize * scale;// 48x48 tile 
	final int maxScreenCol = 16;
	final int maxScreenRow = 12;
	final int screenWidth = tileSize * maxScreenCol;//768 pixels
	final int screenHeigh = tileSize * maxScreenRow;// 576 pixels
	Thread gameThread;
	KeyHandler keyH = new KeyHandler();
	
	//Set player's default position
	int playerX = 100;
	int playerY = 100;
	int playerSpeed = 4;
	public GamePanel() {
		this.setPreferredSize(new Dimension(screenWidth, screenHeigh));
		this.setBackground(Color.black);
		this.setDoubleBuffered(true);
		this.addKeyListener(keyH);
		this.setFocusable(true);
	}
	
	public void startGameThread() {
		gameThread = new Thread(this);
		gameThread.start();
	}
	@Override
	public void run() {
		while(gameThread != null) {
		//	System.out.println("The game loop is running");
		// UPDATE: update information such as character positions
			update();
		// DRAW: draw the screen with the updated information
            repaint();
		}
	}
	
	public void update() {
		if(keyH.upPressed == true) {
			playerY -= playerSpeed;
		}
  lseif(keyH.upPressed == true) {
			playerY -= playerSpeed;
		}
		if(keyH.upPressed == true) {
			playerY = playerX - playerSpeed;
		}
		if(keyH.upPressed == true) {
			playerY = playerX - playerSpeed;
		}
		
		
		
	}
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D)g;
		g2.setColor(Color.white);
		g2.fillRect(playerX, playerY, tileSize, tileSize);
		g2.dispose();
	}
}
